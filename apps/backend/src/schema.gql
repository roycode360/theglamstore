# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input AddToCartInput {
  productId: String!
  quantity: Int!
  selectedColor: String!
  selectedSize: String!
}

type AuthUser {
  email: String!
  id: String!
  role: String!
}

type CartItemType {
  _id: String!
  createdAt: DateTime!
  product: Product
  quantity: Int!
  selectedColor: String!
  selectedSize: String
  updatedAt: DateTime!
  userId: ID!
}

type Category {
  _id: ID!
  active: Boolean!
  description: String
  image: String
  name: String!
  parentId: String
  slug: String!
  sortOrder: Int!
}

input CreateCategoryInput {
  active: Boolean! = true
  description: String
  image: String
  name: String!
  parentId: String
  slug: String!
  sortOrder: Int! = 0
}

input CreateProductInput {
  active: Boolean!
  brand: String
  category: String!
  colors: [String!]!
  description: String
  featured: Boolean!
  images: [String!]!
  name: String!
  price: Float!
  salePrice: Float
  sizes: [String!]!
  sku: String
  slug: String!
  stockQuantity: Float
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type LoginResponse {
  accessToken: String!
  refreshToken: String!
  user: AuthUser!
}

type Mutation {
  addToCart(input: AddToCartInput!): CartItemType!
  addToWishlist(productId: String!, selectedColor: String, selectedSize: String): Boolean!
  clearCart: Boolean!
  createBankTransferOrder(payload: String!): Boolean!
  createCategory(input: CreateCategoryInput!): Category!
  createProduct(input: CreateProductInput!): Product!
  deleteCategory(id: ID!): Boolean!
  deleteOrder(id: String!): Boolean!
  deleteProduct(id: ID!): Boolean!
  loginWithAuth0(auth0Token: String!): LoginResponse!
  removeFromCart(input: RemoveFromCartInput!): Boolean!
  removeFromWishlist(productId: String!, selectedColor: String, selectedSize: String): Boolean!
  sendContactMessage(email: String!, message: String!, name: String!, subject: String): Boolean!
  updateCartItem(input: UpdateCartItemInput!): CartItemType!
  updateCategory(id: ID!, input: UpdateCategoryInput!): Category
  updateOrderStatus(id: String!, status: String!): Order
  updateProduct(id: ID!, input: UpdateProductInput!): Product
}

type Order {
  _id: ID!
  address1: String!
  city: String!
  createdAt: DateTime!
  email: String!
  firstName: String!
  items: [OrderItem!]!
  lastName: String!
  paymentMethod: String!
  phone: String
  state: String!
  status: String!
  subtotal: Float!
  tax: Float!
  total: Float!
  transferProofUrl: String
  updatedAt: DateTime!
}

type OrderItem {
  image: String
  name: String
  price: Float
  productId: String!
  quantity: Float
  selectedColor: String
  selectedSize: String
}

type OrderPage {
  items: [Order!]!
  page: Float!
  pageSize: Float!
  total: Float!
  totalPages: Float!
}

type Product {
  _id: ID!
  active: Boolean!
  brand: String
  category: String!
  colors: [String!]!
  description: String
  featured: Boolean!
  images: [String!]!
  name: String!
  price: Float!
  salePrice: Float
  sizes: [String!]!
  sku: String
  slug: String!
  stockQuantity: Float
}

type ProductPage {
  items: [Product!]!
  page: Int!
  pageSize: Int!
  total: Int!
  totalPages: Int!
}

type Query {
  getCartItemCount: Float!
  getCartItems: [CartItemType!]!
  getOrder(id: String!): Order
  getProduct(id: ID!): Product
  health: String!
  listCategories: [Category!]!
  listFeaturedProducts: [Product!]!
  listOrders: [Order!]!
  listOrdersPage(page: Int!, pageSize: Int!, status: String): OrderPage!
  listProducts: [Product!]!
  listProductsPage(active: Boolean, brand: String, category: String, inStockOnly: Boolean, maxPrice: Float, minPrice: Float, onSaleOnly: Boolean, outOfStock: Boolean, page: Int, pageSize: Int, search: String, sortBy: String, sortDir: String): ProductPage!
  listWishlist: [Product!]!
  me: User!
}

input RemoveFromCartInput {
  cartItemId: String!
}

input UpdateCartItemInput {
  cartItemId: String!
  quantity: Int!
}

input UpdateCategoryInput {
  active: Boolean
  description: String
  image: String
  name: String
  parentId: String
  slug: String
  sortOrder: Int
}

input UpdateProductInput {
  active: Boolean
  brand: String
  category: String
  colors: [String!]
  description: String
  featured: Boolean
  images: [String!]
  name: String
  price: Float
  salePrice: Float
  sizes: [String!]
  sku: String
  slug: String
  stockQuantity: Float
}

type User {
  _id: ID!
  createdAt: DateTime
  email: String!
  emailVerified: Boolean!
  role: String!
  updatedAt: DateTime
}